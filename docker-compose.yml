services:
  cf-zookeeper:
    image: zookeeper
    restart: always
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=cf-zookeeper:2888:3888
    ports:
      - "2181:2181"
    networks:
      - cloud-based-de
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 30s
      retries: 3
      start_period: 10s
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_ZOOKEEPER_CONNECT: "cf-zookeeper:2181"
    depends_on:
      - cf-zookeeper
    networks:
      - cloud-based-de
  jupyter:
    image: jupyter/pyspark-notebook
    container_name: jupyter-notebook
    user: root
    ports:
      - "8888:8888"
    volumes:
      - ./:/home/aacict/work
    environment:
      JUPYTER_TOKEN: "password"
      JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"
    networks:
      - cloud-based-de
networks:
  cloud-based-de:
    driver: bridge
